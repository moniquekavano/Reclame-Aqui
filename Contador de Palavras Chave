import pandas as pd
import re
from collections import Counter
import unicodedata

# Carregar os dados
doc = r'C:\PythonDSA\ALL\Base_RA_Git.xlsx'
df = pd.read_excel(doc)

# Lista de stop words
stop_words = {'e', 'ou', 'da', 'que', 'nao', 'br', 'de', 'com', 
              'o', 'a', 'empresa', 'para', 'em', 'no', 'me', 
              'uma', 'do', 'na', 'pelo', 'meu', 'foi', 'um', 'minha',
               'é', 'por', 'eu', 'os', 'se', 'pois', 'esta', 'aqui',
               'se', 'mas'}

# Função para limpar e tokenizar o texto
def tokenize(text):
    # Normalizar texto (remover acentuação)
    text = unicodedata.normalize('NFKD', text).encode('ASCII', 'ignore').decode('ASCII')
    # Remover caracteres especiais e deixar tudo em minúsculo
    text = re.sub(r'[^A-Za-z0-9\s]', ' ', text).lower()
    # Dividir o texto em palavras
    words = text.split()
    # Remover stop words
    words = [word for word in words if word not in stop_words]
    return words

# Função para obter as 10 palavras mais comuns
def top_words(tag_col):
    # Filtrar as reclamações onde a tag é 1
    complaints = df[df[tag_col] == 1]['description']
    # Inicializar um contador de palavras
    word_counter = Counter()
    # Tokenizar e contar as palavras em cada reclamação
    for complaint in complaints:
        words = tokenize(str(complaint))  # Garantir que o texto seja uma string
        word_counter.update(words)
    # Retornar as 10 palavras mais comuns
    return word_counter.most_common(10)

# Obter as 10 palavras mais mencionadas para cada tag
tags = ['Atendimento', 'Problemas na Cobrança', 'Dificuldades no cancelamento', 
        'Propaganda Enganosa', 'Problemas na Contratação', 'Insatisfação com o Produto']
top_words_by_tag = {tag: top_words(tag) for tag in tags}

# Exibir os resultados
for tag, words in top_words_by_tag.items():
    print(f"As 10 palavras mais mencionadas em {tag}:")
    for word, count in words:
        print(f"{word}: {count}")
    print()
